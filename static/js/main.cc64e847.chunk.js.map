{"version":3,"sources":["components/bank/Controls/Controls.jsx","components/bank/Balance/Balance.jsx","components/bank/TransactionHistory/TransactionHistory.js","components/bank/services/Ls/Ls.jsx","components/bank/Dashboard/Dashboard.jsx","App.js","index.js","components/bank/style.module.css"],"names":["Controls","onInputChange","deposit","withdraw","resetForm","clearHistory","className","style","controls","type","input","onChange","value","button","name","onClick","Balance","balance","deposite","TransactionHistory","history","map","item","key","id","amount","date","LsBankHistory","setBankHistory","arrHistory","localStorage","setItem","JSON","stringify","getBankHistory","parse","getItem","clearLS","clear","prevTransactions","Dashboard","noMoney","toast","autoClose","unCorrectInput","handleInput","e","preventDefault","setState","valueInput","Number","target","createNewOperation","typyOperation","dateOperation","Date","toLocaleString","shortid","generate","state","handleClearHistory","handleCkickDeposit","operation","prevState","handleCkickWithdraw","this","prevProps","dashboard","React","Component","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.cc64e847.chunk.js","sourcesContent":["import React from \"react\";\r\nimport style from \"../style.module.css\";\r\nimport propTypes from \"prop-types\";\r\nconst Controls = ({\r\n  onInputChange,\r\n  deposit,\r\n  withdraw,\r\n  resetForm,\r\n  clearHistory\r\n}) => {\r\n  return (\r\n    <section className={style.controls}>\r\n      <input\r\n        type=\"number\"\r\n        className={style.input}\r\n        onChange={onInputChange}\r\n        value={resetForm}\r\n      />\r\n      <button\r\n        type=\"submit\"\r\n        className={style.button}\r\n        name=\"deposit\"\r\n        onClick={deposit}\r\n      >\r\n        Deposit\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className={style.button}\r\n        name=\"withdraw\"\r\n        onClick={withdraw}\r\n      >\r\n        Withdraw\r\n      </button>\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          className={style.button}\r\n          name=\"clearHistory\"\r\n          onClick={clearHistory}\r\n        >\r\n          Очистить\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default Controls;\r\n\r\nControls.propTypes = {\r\n  onInputChange: propTypes.func,\r\n  deposit: propTypes.func,\r\n  withdraw: propTypes.func,\r\n  resetForm: propTypes.string\r\n};\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport style from \"../style.module.css\";\r\n\r\nconst Balance = ({ balance, deposit, withdraw }) => {\r\n  return (\r\n    <section className={style.balance}>\r\n      <span className={style.deposite}>⬆ {deposit}$</span>\r\n      <span className={style.withdraw}>⬇ {withdraw}$</span>\r\n      <span>Balance: {balance}$</span>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n\r\nBalance.propTypes = {\r\n  balance: propTypes.number,\r\n  deposit: propTypes.number,\r\n  withdraw: propTypes.number\r\n};\r\n","import React from \"react\";\r\nimport style from \"../style.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TransactionHistory = ({ history = [] }) => {\r\n  return (\r\n    <div >\r\n    <table className={style.history}>\r\n      <thead >\r\n        <tr>\r\n          <th>Transaction</th>\r\n          <th>Amount</th>\r\n          <th>Date</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {history.map(item => (\r\n          <tr key={item.id}>\r\n            <td>{item.type}</td>\r\n            <td>{item.amount}$</td>\r\n            <td>{item.date}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n    </div>\r\n  );\r\n};\r\nexport default TransactionHistory;\r\n\r\nTransactionHistory.propTypes = {\r\n  history: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n","const LsBankHistory = {\r\n  setBankHistory(arrHistory) {\r\n    localStorage.setItem(\"bankHistory\", JSON.stringify(arrHistory));\r\n  },\r\n  getBankHistory() {\r\n    return JSON.parse(localStorage.getItem(\"bankHistory\"));\r\n  },\r\n  clearLS() {\r\n    localStorage.clear();\r\n  }\r\n};\r\nexport default LsBankHistory;\r\n","import React from \"react\";\r\nimport Controls from \"../Controls/Controls\";\r\nimport Balance from \"../Balance/Balance\";\r\nimport TransactionHistory from \"../TransactionHistory/TransactionHistory\";\r\nimport shortid from \"short-id\";\r\nimport style from \"../style.module.css\";\r\nimport LsBankHistory from \"../services/Ls/Ls\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst prevTransactions = LsBankHistory.getBankHistory();\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      history: [],\r\n      balance: 0,\r\n      deposit: 0,\r\n      withdraw: 0,\r\n      valueInput: \"\"\r\n    };\r\n  }\r\n\r\n  noMoney = () =>\r\n    toast(\"На счету недостаточно средств для проведения операции!\", {\r\n      autoClose: 5000\r\n    });\r\n  unCorrectInput = () =>\r\n    toast(\"Введите сумму для проведения операции!\", { autoClose: 5000 });\r\n\r\n  componentDidMount() {\r\n    if (prevTransactions) {\r\n      this.setState({\r\n        history: prevTransactions.history,\r\n        balance: prevTransactions.balance,\r\n        deposit: prevTransactions.deposit,\r\n        withdraw: prevTransactions.withdraw\r\n      });\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.history !== this.state.history) {\r\n      LsBankHistory.setBankHistory(this.state);\r\n    }\r\n  }\r\n\r\n  handleInput = e => {\r\n    e.preventDefault();\r\n      this.setState({ valueInput: Number(e.target.value) });\r\n  };\r\n\r\n  createNewOperation = typyOperation => {\r\n    const dateOperation = new Date().toLocaleString();\r\n    return {\r\n      id: shortid.generate(),\r\n      type: typyOperation,\r\n      amount: this.state.valueInput,\r\n      date: dateOperation\r\n    };\r\n  };\r\n\r\n  handleClearHistory = () => {\r\n    LsBankHistory.clearLS();\r\n    this.setState({ history: [], balance: 0, deposit: 0, withdraw: 0 });\r\n  };\r\n\r\n  handleCkickDeposit = () => {\r\n    if (this.state.valueInput > 0) {\r\n      const operation = this.createNewOperation(\"Deposit\");\r\n      this.setState(prevState => {\r\n        return {\r\n          history: [operation, ...prevState.history],\r\n          deposit: (prevState.deposit += Number(operation.amount)),\r\n          balance: (prevState.balance += Number(operation.amount)),\r\n          valueInput: \"\"\r\n        };\r\n      });\r\n    } else {\r\n      this.setState({valueInput: \"\"})\r\n      this.unCorrectInput();}\r\n  };\r\n\r\n  handleCkickWithdraw = () => {\r\n    if (this.state.valueInput > 0) {\r\n      const operation = this.createNewOperation(\"Withdraw\");\r\n\r\n      this.setState(prevState => {\r\n        if (this.state.balance >= this.state.valueInput) {\r\n          return {\r\n            balance: (prevState.balance -= Number(operation.amount)),\r\n            history: [operation, ...prevState.history],\r\n            withdraw: (prevState.withdraw += Number(operation.amount)),\r\n            valueInput: \"\"\r\n          };\r\n        } else this.noMoney();\r\n      });\r\n    } else this.unCorrectInput();\r\n  };\r\n\r\n  render() {\r\n    const { history, balance, deposit, withdraw, valueInput } = this.state;\r\n    return (\r\n      <div className={style.dashboard}>\r\n        <Controls\r\n          onInputChange={this.handleInput}\r\n          deposit={this.handleCkickDeposit}\r\n          withdraw={this.handleCkickWithdraw}\r\n          resetForm={valueInput}\r\n          clearHistory={this.handleClearHistory}\r\n        />\r\n        <ToastContainer />\r\n        <Balance balance={balance} deposit={deposit} withdraw={withdraw} />\r\n        <TransactionHistory history={history} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Dashboard;\r\n","import React from \"react\";\nimport Dashboard from \"./components/bank/Dashboard/Dashboard\";\nconst App = () => {\n  return (\n    <div>\n      <Dashboard />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"style_dashboard__OFfMX\",\"controls\":\"style_controls__1BVW8\",\"button\":\"style_button__28xCk\",\"input\":\"style_input__1yas-\",\"balance\":\"style_balance__2pdXV\",\"deposite\":\"style_deposite__qVRPf\",\"withdraw\":\"style_withdraw__1StI0\",\"history\":\"style_history__2YEMT\"};"],"sourceRoot":""}