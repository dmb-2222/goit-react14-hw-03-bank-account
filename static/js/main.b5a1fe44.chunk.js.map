{"version":3,"sources":["components/bank/Controls/Controls.jsx","helpers/calculate.js","components/bank/Balance/Balance.jsx","components/bank/TransactionHistory/TransactionHistory.jsx","helpers/toastInfo.js","components/bank/services/ls/ls.jsx","components/bank/Dashboard/Dashboard.jsx","App.jsx","index.js","components/bank/Controls/Controls.module.css","components/bank/Balance/Balance.module.css","components/bank/TransactionHistory/TransactionHistory.module.css","components/bank/Dashboard/Dashboard.module.css"],"names":["Controls","state","value","handleInput","e","setState","target","hadleTransaction","name","typeTransaction","props","handleClickTransaction","this","className","style","controls","onSubmit","evt","preventDefault","type","input","onChange","button","onClick","React","Component","calculate","history","operationType","filter","el","reduce","acc","Number","amount","Balance","balance","console","log","deposite","withdraw","TransactionHistory","map","item","key","id","date","noMoney","toast","autoClose","unCorrectInput","LsBankHistory","setBankHistory","arrHistory","localStorage","setItem","JSON","stringify","getBankHistory","parse","getItem","clearLS","clear","prevTransactions","Dashboard","createNewOperation","typeOperation","valueInput","shortid","generate","Date","toLocaleString","operation","prevState","toastInfo","prevProps","dashboard","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b5a1fe44.chunk.js","sourcesContent":["import React from \"react\";\nimport style from \"./Controls.module.css\";\nimport propTypes from \"prop-types\";\n\nclass Controls extends React.Component {\n  state = { value: \"\" };\n\n  handleInput = e => {\n    this.setState({ value: +e.target.value });\n  };\n  hadleTransaction = ({ target: { name } }) => {\n    const { value } = this.state;\n    const typeTransaction = name;\n    // this.props[typeTransaction](value, typeTransaction);\n    this.props.handleClickTransaction(value, typeTransaction)\n    this.setState({ value: \"\" });\n  };\n  render() {\n    const { value } = this.state;\n    return (\n      <section className={style.controls}>\n        <form onSubmit={evt => evt.preventDefault()}>\n          <input\n            type=\"number\"\n            className={style.input}\n            onChange={this.handleInput}\n            value={value}\n          />\n          <button\n            type=\"submit\"\n            className={style.button}\n            name=\"deposit\"\n            onClick={this.hadleTransaction}\n          >\n            Deposit\n          </button>\n          <button\n            type=\"submit\"\n            className={style.button}\n            name=\"withdraw\"\n            onClick={this.hadleTransaction}\n          >\n            Withdraw\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\nexport default Controls;\n\nControls.propTypes = {\n  hadleDeposit: propTypes.func,\n  resetForm: propTypes.func\n};\n","const calculate = (history, operationType) => {\r\n  return history\r\n    .filter(el => el.type === operationType)\r\n    .reduce((acc, el) => acc + Number(el.amount), 0);\r\n};\r\nexport default calculate;\r\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport style from \"./Balance.module.css\";\nimport calculate from '../../../helpers/calculate'\n\nconst Balance = ({ balance, history }) => {\n  console.log(history)\n  return (\n    <section className={style.balance}>\n      <span className={style.deposite}>⬆ {calculate(history, \"deposit\")}$</span>\n      <span className={style.withdraw}>⬇ {calculate(history,  \"withdraw\")}$</span>\n      <span>Balance: {balance}$</span>\n    </section>\n  );\n};\n\nexport default Balance;\n\nBalance.propTypes = {\n  balance: propTypes.number,\n  withdraw: propTypes.number\n};\n","import React from \"react\";\nimport style from \"./TransactionHistory.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst TransactionHistory = ({ history = [] }) => {\n  return (\n    <table className={style.history}>\n      <thead>\n        <tr>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {history.map(item => (\n          <tr key={item.id}>\n            <td>{item.type}</td>\n            <td>{item.amount}$</td>\n            <td>{item.date}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\nexport default TransactionHistory;\n\nTransactionHistory.propTypes = {\n  history: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import { toast } from \"react-toastify\";\r\n\r\nexport const noMoney = () =>\r\ntoast(\"На счету недостаточно средств для проведения операции!\", {\r\n  autoClose: 5000\r\n});\r\nexport const unCorrectInput = () =>\r\ntoast(\"Введите сумму для проведения операции!\", { autoClose: 5000 });","const LsBankHistory = {\r\n  setBankHistory(arrHistory) {\r\n    localStorage.setItem(\"bankHistory\", JSON.stringify(arrHistory));\r\n  },\r\n  getBankHistory() {\r\n    return JSON.parse(localStorage.getItem(\"bankHistory\"));\r\n  },\r\n  clearLS() {\r\n    localStorage.clear();\r\n  }\r\n};\r\nexport default LsBankHistory;\r\n","import React from \"react\";\nimport Controls from \"../Controls/Controls\";\nimport Balance from \"../Balance/Balance\";\nimport TransactionHistory from \"../TransactionHistory/TransactionHistory\";\nimport shortid from \"short-id\";\nimport style from \"./Dashboard.module.css\";\nimport * as toastInfo from \"../../../helpers/toastInfo\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport LsBankHistory from \"../services/ls/ls\";\n\nconst prevTransactions = LsBankHistory.getBankHistory();\n\nclass Dashboard extends React.Component {\n  state = {\n    history: [],\n    balance: 0\n  };\n\n  componentDidMount() {\n    if (prevTransactions) {\n      this.setState({\n        history: prevTransactions.history,\n        balance: prevTransactions.balance\n      });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.history !== this.state.history) {\n      LsBankHistory.setBankHistory(this.state);\n    }\n  }\n  createNewOperation = (typeOperation, valueInput) => {\n    // const dateOperation = new Date().toLocaleString();\n    return {\n      id: shortid.generate(),\n      type: typeOperation,\n      amount: valueInput,\n      date: new Date().toLocaleString()\n    };\n  };\n  handleClickTransaction = (valueInput, name) => {\n    if (valueInput > 0) {\n      const operation = this.createNewOperation(name, valueInput);\n      this.setState(prevState => {\n        if (name === \"deposit\") {\n          return {\n            history: [operation, ...prevState.history],\n            balance: (prevState.balance += Number(operation.amount))\n          };\n        }\n        if (this.state.balance >= valueInput) {\n          return {\n            history: [operation, ...prevState.history],\n            balance: (prevState.balance -= Number(operation.amount))\n          };\n        }\n        toastInfo.noMoney();\n      });\n      return;\n    }\n    toastInfo.unCorrectInput();\n  };\n  render() {\n    const { history, balance } = this.state;\n    return (\n      <div className={style.dashboard}>\n        <Controls\n          handleClickTransaction={this.handleClickTransaction}\n          // withdraw={this.handleCkickWithdraw}\n        />\n        <Balance balance={balance} history={history} />\n        <TransactionHistory history={history} />\n      </div>\n    );\n  }\n}\nexport default Dashboard;\n\n// handleCkickWithdraw = (valueInput, name) => {\n//   if (valueInput > 0) {\n//     const operation = this.createNewOperation(name, valueInput);\n//     this.setState(prevState => {\n//       if (this.state.balance >= valueInput) {\n//         return {\n//           history: [operation, ...prevState.history],\n//           balance: (prevState.balance -= Number(operation.amount))\n//         };\n//       }\n//       this.noMoney();\n//     });\n//   } else {\n//     this.unCorrectInput();\n//   }\n// };\n// handleCkickDeposit = (valueInput, name) => {\n//   if (valueInput > 0) {\n//     const operation = this.createNewOperation(name, valueInput);\n//     this.setState(prevState => {\n//       return {\n//         history: [operation, ...prevState.history],\n//         balance: (prevState.balance += Number(operation.amount))\n//       };\n//     });\n//   } else {\n//     this.unCorrectInput();\n//   }\n// };\n","import React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport Dashboard from \"./components/bank/Dashboard/Dashboard\";\nconst App = () => (\n  <>\n    <Dashboard />\n    <ToastContainer />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__Qiv2m\",\"button\":\"Controls_button__71hZR\",\"input\":\"Controls_input__3ATxJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__pjz2f\",\"deposite\":\"Balance_deposite__1_6vQ\",\"withdraw\":\"Balance_withdraw__2EcOR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__1nvyg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__26muD\"};"],"sourceRoot":""}